<!--start: Wrapper-->
<div id="wrapper" class="full">       

  <!--start: Row -->
  <div class="row-fluid">

    <div class="span8 separate">

      <%= image_tag(@photo.file.url(:full), class: 'photo annotatable', id: 'photo') %>

      <p>
        <strong>Footer:</strong> <%= raw(@photo.footer) %>
      </p>

      <p>
        Personas relacionadas:
        <% @photo.related_entities.each do |entity| %>
          <%= link_to entity.short_or_long_name, entity_path(entity) %>
        <% end %>
      </p>

      <% if can? :manage, @photo %>
      <p>
        Tags: 
        <% @photo.tag_list.each do |tag| %>
          <%= link_to tag, tagged_photos_path(tag_name: tag) %>
        <% end %>
      </p>
      <p>
        <%= link_to 'Full-resolution link', @photo.file.url %>
      </p>
      <% end %>

      <hr>

      <%= link_to 'Back', photos_path %>

    </div>

  </div>

</div>

<!-- FIXME: Annotorious Proof of Concept. Much improvement left -->
<script src="/javascripts/annotorious/annotorious.min.js"></script>
<script src="/javascripts/annotorious/anno-rest-storage-plugin.js"></script>
<script>
// Annotorious seems to break the $ jQuery object, which creates havoc with 
// other Javascript code, so we load it dynamically after the page is loaded.
// Interestingly this doesn't happen with the dev (uncompiled) version. More
// interestingly trying to restore it ($=jQuery) breaks the plugin 
jQuery(function() {
  <% if not can? :manage, @photo %>
  // Set default properties so the widget doesn't come back after annotations loaded
  anno.setProperties = { hide_selection_widget: true, hide_annotations: false };
  // ...and then hide the widget
  anno.hideSelectionWidget();
  <% end %>

  anno.addPlugin('RESTStorage', { base_url: '/annotations' });
});
</script>
<style>
  /* FIXME: Clumsy and insecure way of disabling edit buttons in pop-up */
  <% if not can? :manage, @photo %>
  .annotorious-popup-button-edit,
  .annotorious-popup-button-delete {
    display: none;
  }
  <% end %>
</style>